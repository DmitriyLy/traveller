version : '3.4'
services:
  mysql:
    build:
      context: ./traveller-admin
      dockerfile: src/main/resources/docker/mysql.dockerfile
    logging:
      driver: none
    networks:
      - network1
    environment:
      - MYSQL_USER=traveller
      - MYSQL_PASSWORD=traveller
      - MYSQL_DATABASE=traveller
    env_file:
      - mysql.env
    healthcheck:
      test: mysql -ugermes -pgermes -e "SELECT version();"
      interval: 1m
      timeout: 10s
      retries: 2
      start_period: 1m
  admin:
    build:
      context: ./traveller-admin
      dockerfile: src/main/resources/docker/admin-tomcat.dockerfile
    ports:
      - "9000:8080"
    networks:
      - network1
    depends_on:
      - mysql
    entrypoint: bash -c "sleep 5s && catalina.sh run"
    healthcheck:
      test: curl -f http://localhost:8080 || exit 1
      interval: 1m
      timeout: 10s
      retries: 2
      start_period: 1m
    #environment:
    #  - JAVA_OPTS=--add-modules java.xml.bind
  client:
    build:
      context: ./traveller-web
      dockerfile: src/main/resources/docker/client-tomcat.dockerfile
    ports:
      - "8080:8080"
    networks:
      - network1
    depends_on:
      - mysql
    entrypoint: bash -c "sleep 5s && catalina.sh run"
    healthcheck:
      test: curl -f http://localhost:8080 || exit 1
      interval: 1m
      timeout: 10s
      retries: 2
      start_period: 1m
    #environment:
    #  - JAVA_OPTS=--add-modules java.xml.bind
networks:
  network1:
    driver: bridge